#!/usr/bin/env node
var argv            = require('minimist')(process.argv.slice(2));
var utils           = require('./utils.js');
var entity_factory  = require('./entity_factory.js');
var config          = require('./config.js');

function printHelp() {
  console.log("Usage:");
  console.log("  dndhelper <command> [options]");
  console.log("Where command can be one of: ");
  console.log("  --lsdb to list all the databases available");
  console.log("  --setdb <index> to set the interested database");
  console.log("  --lsschema to show the schemas");
  console.log("  --setschema to set the schemas");
  console.log("  --show-entities to show all entities");
  console.log("  --create-entity to create an entity, based on selected schema");
  process.exit();
}

if (Object.keys(argv).length == 1) {
  printHelp();
}

/* Whenever you run, you want to check for dirs */
utils.makeDataDirs();

if (argv['lsdb']) {
  config.lsDataSources();
}
else if (argv['setdb'] != undefined) {
  config.setDataSource(argv['setdb']);
}
else if (argv['setschema'] != undefined) {
  config.setSchemaSource(argv['setschema']);
}
else if (argv['lsschema'] != undefined) {
  config.lsSchemas();
}
else if (argv['create-entity'] != undefined) {
  console.log(config.readSchema());
  entity_factory.createEntityInteractive();
}
else if (argv['show-entities']) {
  var filename = config.getDataSourceFilename();
  var entities = entity_factory.makeFromJSON(filename);
  entities.forEach(function(e){
     e.toTable();
  });
}
else {
  printHelp();
}
